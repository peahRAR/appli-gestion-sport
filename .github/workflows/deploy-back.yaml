name: Deploy Back-End

on:
  push:
    branches: [ main ]
    paths:
      - 'back-end/**'
      - '.github/workflows/deploy-back-end.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Dependencies
      working-directory: back-end
      run: npm ci

    - name: Build
      working-directory: back-end
      env:
        GIT_COMMIT: ${{ github.sha }}
        BUILT_AT: ${{ github.run_id }}
      run: |
        npm run build
        echo "{\"commit\":\"${GIT_COMMIT}\",\"builtAt\":\"$(date -Is)\"}" > dist/version.json

    - name: Archive Production Build
      working-directory: back-end
      run: tar -czf ../production.tar.gz dist templates

    - name: Verify Archive Content
      run: tar -tzf production.tar.gz | head -20

    - name: Copy Production Build to the Server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "production.tar.gz"
        target: "/home/${{ secrets.SERVER_USER }}/appli-gestion-sport/back-end/"

    - name: Copy Ecosystem Config to the Server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "back-end/ecosystem.config.js"
        target: "/home/${{ secrets.SERVER_USER }}/appli-gestion-sport/"

    - name: Deploy with PM2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          set -euo pipefail
          cd /home/${{ secrets.SERVER_USER }}/appli-gestion-sport/back-end
          
          # Supprime l'ancien build
          rm -rf dist templates
          
          # Extrait la nouvelle version
          tar -xzf production.tar.gz
          rm production.tar.gz
          
          # Vérification que main.js existe
          if [ -f "dist/src/main.js" ]; then
            echo "✅ dist/src/main.js trouvé"
          elif [ -f "dist/main.js" ]; then
            echo "✅ dist/main.js trouvé"
          else
            echo "❌ ERREUR: main.js n'existe ni dans dist/ ni dans dist/src/!"
            echo "Contenu de dist/:"
            ls -la dist/
            echo "Contenu de dist/src/:"
            ls -la dist/src/ 2>/dev/null || echo "dist/src/ n'existe pas"
            exit 1
          fi
          
          echo "✅ Fichiers déployés correctement"
          echo "Contenu de dist/:"
          ls -la dist/ | head -10
          echo "Contenu de dist/src/:"
          ls -la dist/src/ | head -10 2>/dev/null || echo "Pas de dossier src"
          
          # Configuration et reload PM2
          export GOOGLE_APPLICATION_CREDENTIALS=/home/${{ secrets.SERVER_USER }}/appli-gestion-sport/back-end/mma-baisieux-f9fcae8661ce.json
          pm2 reload /home/${{ secrets.SERVER_USER }}/appli-gestion-sport/ecosystem.config.js --update-env
          pm2 ls